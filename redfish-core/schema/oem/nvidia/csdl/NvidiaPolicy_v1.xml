<?xml version="1.0" encoding="UTF-8"?>
<!---->
<!--################################################################################       -->
<!--# Redfish OEM Schema:  NvidiaPolicy   v1.0.0                                           -->
<!--#                                                                                      -->
<!--# Copyright 2021-2024 NVIDIA.                                                          -->
<!--# For the full NVIDIA copyright policy, see LICENSE.md                                 -->
<!--################################################################################       -->
<!---->
<edmx:Edmx xmlns:edmx="http://docs.oasis-open.org/odata/ns/edmx" Version="4.0">
  <edmx:Reference Uri="http://docs.oasis-open.org/odata/odata/v4.0/errata03/csd01/complete/vocabularies/Org.OData.Core.V1.xml">
    <edmx:Include Namespace="Org.OData.Core.V1" Alias="OData"/>
  </edmx:Reference>
  <edmx:Reference Uri="http://docs.oasis-open.org/odata/odata/v4.0/errata03/csd01/complete/vocabularies/Org.OData.Capabilities.V1.xml">
    <edmx:Include Namespace="Org.OData.Capabilities.V1" Alias="Capabilities"/>
  </edmx:Reference>
  <edmx:Reference Uri="http://redfish.dmtf.org/schemas/v1/RedfishExtensions_v1.xml">
    <edmx:Include Namespace="RedfishExtensions.v1_0_0" Alias="Redfish"/>
  </edmx:Reference>
  <edmx:Reference Uri="http://redfish.dmtf.org/schemas/v1/Resource_v1.xml">
    <edmx:Include Namespace="Resource"/>
    <edmx:Include Namespace="Resource.v1_0_0"/>
  </edmx:Reference>
  <edmx:DataServices>
    <Schema xmlns="http://docs.oasis-open.org/odata/ns/edm" Namespace="NvidiaPolicy">
      <Annotation Term="Redfish.OwningEntity" String="NVIDIA"/>
      <EntityType Name="NvidiaPolicy" BaseType="Resource.v1_0_0.Resource" Abstract="true">
        <Annotation Term="OData.Description" String="The NvidiaPolicy schema describes a policy that can be delegated to a resource."/>
        <Annotation Term="OData.LongDescription" String="This resource shall represent a policy that has been associated to resource in a Redfish implementation."/>
        <Annotation Term="OData.AdditionalProperties" Bool="false"/>
        <Annotation Term="Capabilities.InsertRestrictions">
          <Record>
            <PropertyValue Property="Insertable" Bool="false"/>
          </Record>
        </Annotation>
        <Annotation Term="Capabilities.UpdateRestrictions">
          <Record>
            <PropertyValue Property="Updatable" Bool="true"/>
          </Record>
        </Annotation>
        <Annotation Term="Capabilities.DeleteRestrictions">
          <Record>
            <PropertyValue Property="Deletable" Bool="false"/>
          </Record>
        </Annotation>
        <Annotation Term="Redfish.Uris">
          <Collection>
            <String>/redfish/v1/Chassis/{ChassisId}/Oem/Nvidia/Policies/{NvidiaPolicyId}</String>
          </Collection>
        </Annotation>
      </EntityType>
    </Schema>
    <Schema xmlns="http://docs.oasis-open.org/odata/ns/edm" Namespace="NvidiaPolicy.v1_0_0">
      <Annotation Term="Redfish.OwningEntity" String="NVIDIA"/>
      <EntityType Name="NvidiaPolicy" BaseType="NvidiaPolicy.NvidiaPolicy">
         <Property Name="Status" Type="Resource.Status" Nullable="false">
          <Annotation Term="OData.Description" String="The status and health of the resource and its subordinate or dependent resources."/>
          <Annotation Term="OData.LongDescription" String="This property shall contain any status or health properties of the resource."/>
        </Property>
        <Property Name="PolicyEnabled" Type="Edm.Boolean" Nullable="false">
          <Annotation Term="OData.Permissions" EnumMember="OData.Permission/ReadWrite"/>
          <Annotation Term="OData.Description" String="An indication of whether this policy is enabled."/>
          <Annotation Term="OData.LongDescription" String="The value of this property shall indicate that the policy is enabled."/>
        </Property>
        <Property Name="PolicyConditionLogic" Type="NvidiaPolicy.v1_0_0.PolicyConditionLogicEnum" Nullable="false">
          <Annotation Term="OData.Permissions" EnumMember="OData.Permission/Read"/>
          <Annotation Term="OData.Description" String="The logic to apply to the array of policy conditions."/>
          <Annotation Term="OData.LongDescription" String="This property shall specific the logic to apply to the array of policy conditions."/>
          <Annotation Term="Redfish.RequiredOnCreate"/>
        </Property>
        <Property Name="PolicyConditions" Type="Collection(NvidiaPolicy.v1_0_0.PolicyCondition)" Nullable="false">
          <Annotation Term="OData.Description" String="An array of conditions for the policy."/>
          <Annotation Term="OData.LongDescription" String="The values shall be the conditions for the policy.  The condition logic behavior shall be 'AllOf', unless the PolicyConditionLogic property is present."/>
        </Property>
        <Property Name="PolicyReactions" Type="Collection(NvidiaPolicy.v1_0_0.PolicyReaction)" Nullable="false">
          <Annotation Term="OData.Description" String="An array of reactions to perform when the policy conditions are met."/>
          <Annotation Term="OData.LongDescription" String="The values shall contain the reactions to perform when the policy conditions are met."/>
        </Property>
      </EntityType>
      <ComplexType Name="PolicyCondition">
        <Annotation Term="OData.AdditionalProperties" Bool="false"/>
        <Annotation Term="OData.Description" String="Condition for the policy."/>
        <Annotation Term="OData.LongDescription" String="This property shall contain a condition for the policy."/>
        <Property Name="Property" Type="Edm.String" Nullable="false">
          <Annotation Term="OData.Permissions" EnumMember="OData.Permission/Read"/>
          <Annotation Term="OData.Description" String="The link to a property which provides the value for the condition."/>
          <Annotation Term="OData.LongDescription" String="This property shall contain a link to a property that provides the value for the condition."/>
          <Annotation Term="OData.IsURL"/>
        </Property>
        <Property Name="PropertyStringValue" Type="Edm.String" Nullable="false">
          <Annotation Term="OData.Permissions" EnumMember="OData.Permission/Read"/>
          <Annotation Term="OData.Description" String="The string value which when matched by the value of Property is interpreted as a condition."/>
          <Annotation Term="OData.LongDescription" String="The string value which when matched by the value of Property shall be interpreted as a condition."/>
        </Property>
      </ComplexType>
      <ComplexType Name="PolicyReaction">
        <Annotation Term="OData.AdditionalProperties" Bool="false"/>
        <Annotation Term="OData.Description" String="A reaction that the policy will perform when the policy is triggered."/>
        <Annotation Term="OData.LongDescription" String="This type shall contain the reactions that the policy will invoke when triggered."/>
        <Property Name="ReactionDelaySeconds" Type="Edm.Decimal">
          <Annotation Term="OData.Permissions" EnumMember="OData.Permission/Read"/>
          <Annotation Term="OData.Description" String="The time to delay before performing the reaction."/>
          <Annotation Term="OData.LongDescription" String="This property shall contain the time to delay in seconds before performing the reaction."/>
        </Property>
        <Property Name="CommonReaction" Type="NvidiaPolicy.v1_0_0.CommonReactionEnum">
          <Annotation Term="OData.Permissions" EnumMember="OData.Permission/ReadWrite"/>
          <Annotation Term="OData.Description" String="The reaction to perform."/>
          <Annotation Term="OData.LongDescription" String="This property shall contain the value of the reaction to perform."/>
        </Property>
      </ComplexType>
      <EnumType Name="PolicyConditionLogicEnum">
        <Member Name="AllOf">
          <Annotation Term="OData.Description" String="All of the policy conditions are met."/>
          <Annotation Term="OData.LongDescription" String="This value shall indicate the policy is triggered when all of the policy conditions in the array are met."/>
        </Member>
        <Member Name="AnyOf">
          <Annotation Term="OData.Description" String="At least one policy conditions is met."/>
          <Annotation Term="OData.LongDescription" String="This value shall indicate the policy is triggered when any of the policy conditions in the array is met."/>
        </Member>
      </EnumType>
      <EnumType Name="CommonReactionEnum">
        <Member Name="HardPowerOff">
          <Annotation Term="OData.Description" String="Shut power to the entity."/>
          <Annotation Term="OData.LongDescription" String="This value shall indicate that the reaction is to perform a hard power off of a system."/>
        </Member>
      </EnumType>
    </Schema>
  </edmx:DataServices>
</edmx:Edmx>
